# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml
# https://www.wagner-dev.com/azure-pipelines-automatic-app-versioning.html
# name: $(MajorVersion).$(MinorVersion).$(date:yy)$(DayOfYear)$(rev:.r)



trigger:
- main
pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86|x64|ARM'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'
  myDraftReleaseVersion: 'v1.1'

steps:

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
- task: VSBuild@1
  inputs:
    platform: 'x86'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

# - task: CopyFiles@2
#    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
#      inputs:
#        SourceFolder: '$(system.defaultworkingdirectory)/target'
# Contents: '*.jar'
#        TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(appxPackageDir)'

- task: GitHubRelease@0
  displayName: 'Edit GitHub Release'
  inputs: 
    gitHubConnection: 'marinusklaassen'
    repositoryName: 'marinusklaassen/simpledrumsequencer'
    action: edit
    tag: $(draftReleaseTag)
    assets: $(appxPackageDir)
